---
# tasks file for monitorix
- name: "get currently installed monitorix version"
  shell: "dpkg-query --showformat='${Version}' --show monitorix || true"
  register: monitorix_detected_version
  ignore_errors: True
  changed_when: False

- name: "install monitorix dependencies"
  apt: pkg={{ item }} state=present
  with_items:
  - perl
  - rrdtool
  - libwww-perl
  - libmailtools-perl
  - libmime-lite-perl
  - librrds-perl
  - libdbi-perl
  - libxml-simple-perl
  - libhttp-server-simple-perl
  - libconfig-general-perl
  - libio-socket-ssl-perl
  when: monitorix_detected_version.stdout != "{{ monitorix_version }}"
  become_user: root
  become: yes

- file: path={{ monitorix_download_dir }} state=directory
  when: monitorix_detected_version.stdout != "{{ monitorix_version }}"

- name: "Download monitorix package"
  get_url: url={{ monitorix_url }} dest={{ monitorix_download_dir }}
  when: monitorix_detected_version.stdout != "{{ monitorix_version }}"

- name: "Install monitorix"
  command: chdir={{Â monitorix_download_dir }} {{ item }}
  with_items:
    - "dpkg -i monitorix_{{ monitorix_version }}_all.deb"
  when: monitorix_detected_version.stdout != "{{ monitorix_version }}"
  become_user: root
  become: yes

- name: "Create monitorix config"
  template: src=monitorix.conf dest={{ monitorix_conf }} owner=root group=root mode=0644
  become_user: root
  become: yes
  register: monitorix_config_changed

- name: "restart monitorix"
  service: name=monitorix state=restarted enabled=yes
  when: monitorix_detected_version.stdout != "{{ monitorix_version }}" or monitorix_config_changed.changed
  become_user: root
  become: yes
