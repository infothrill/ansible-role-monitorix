---
# tasks file for monitorix
- name: "get currently installed monitorix version"
  shell: "dpkg-query --showformat='${Version}' --show monitorix || true"
  register: monitorix_detected_version
  ignore_errors: true
  changed_when: false

- name: "install monitorix dependencies"
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - perl
    - rrdtool
    - libwww-perl
    - libmailtools-perl
    - libmime-lite-perl
    - librrds-perl
    - libdbi-perl
    - libxml-simple-perl
    - libhttp-server-simple-perl
    - libconfig-general-perl
    - libio-socket-ssl-perl
  become_user: root
  become: true

- name: "monitorix download dir"
  file:
    path: "{{ monitorix_download_dir }}"
    state: directory
  when: monitorix_detected_version.stdout != monitorix_version

- name: "Download monitorix package"
  get_url:
    url: "{{ monitorix_url }}"
    dest: "{{ monitorix_download_dir }}"
    checksum: "{{ monitorix_checksum }}"
    validate_certs: false  # we validate the checksum and stay compatible with old python versions
  when: monitorix_detected_version.stdout != monitorix_version

- name: "Install monitorix"
  command: chdir={{Â monitorix_download_dir }} {{ item }}
  with_items:
    - "dpkg -i monitorix_{{ monitorix_version }}_all.deb"
  when: monitorix_detected_version.stdout != monitorix_version
  become_user: root
  become: true
  notify: "restart monitorix"

- name: "Create monitorix config"
  template:
    src: monitorix.conf.j2
    dest: "{{ monitorix_conf }}"
    owner: root
    group: root
    mode: 0644
  become_user: root
  become: true
  register: monitorix_config_changed
  notify: "restart monitorix"

- name: "enable monitorix"
  service:
    name: monitorix
    enabled: true
  become_user: root
  become: true
